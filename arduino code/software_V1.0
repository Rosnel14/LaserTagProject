// Version 1.0 of the Chest Piece Software

#include <LiquidCrystal.h>
#include "pitches.h"

// Pin Set up 
int Reciever = 9; 
int Light = 13;
int Buzzer = 6;

// notes in the melody:
int melody[] = { NOTE_C4, NOTE_G3, NOTE_G3, NOTE_A3, NOTE_G3, 0, NOTE_B3, NOTE_C4 };

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = { 4, 8, 8, 4, 4, 4, 4, 4 };

// LCD Set Up

// Set Up 1 
//LiquidCrystal lcd(12, 11, 10, 9, 8, 7);

// Set Up 2 
LiquidCrystal lcd(12,11,5,4,3,2);

// Strings to Display
String top = "Player 1";
String bottom = "Health: ";
int health = 5;


void setup()
{
  // Real Use Case 
  pinMode(Reciever,INPUT);
    
  // LED
  pinMode(Light,OUTPUT);

  // LCD Protocol 
  lcd.begin(16, 2);
}

void loop()
{
  // Updates and Displays 
  displayScreen();

  // Looks for Hit 
  actionListner();
}

void actionListner()
{

  // Getting Hit
  if (digitalRead(Reciever) == HIGH)
  {
    // Decrement by 1 
    health--;

    /*
    // Flashing Light/Buzzer Routine
    for(int i = 0; i < 10; i++)
    {
  
      digitalWrite(Light,HIGH);
      delay(100);
      sound();
      digitalWrite(Light,LOW);
      delay(100);
    }
    */

  }

}

void displayScreen()
{
  // Death Screen 
  if (health == 0)
  {
    lcd.setCursor(0, 0);
    lcd.print("   YOU DIED!    ");
    lcd.setCursor(0, 1);
    lcd.print("                "); 
  }
  // When Health is Greater than 0
  else if (health > 0)
  {
    lcd.setCursor(0, 0);
    lcd.print(top);
    lcd.setCursor(0, 1);
    lcd.print(bottom + health);
  }
  else
  {
    lcd.setCursor(0, 0);
    lcd.print("      Error     ");
  }

}

  void sound()
  {
      tone(Buzzer,261);    
      // Waits some time to turn off
      delay(200);
      //Turns the buzzer off
      noTone(Buzzer); 
      tone(Buzzer,261);    
      // Waits some time to turn off
      delay(200);
      //Turns the buzzer off
      noTone(Buzzer); 
      
      // Different Melody to experiment with 
        /*
        tone(buzzer,293);             
        delay(200);    
        noTone(buzzer); 
        // Sounds the buzzer at the frequency relative to the note E in Hz
        tone(buzzer,329);      
        delay(200);
        noTone(buzzer);     
        // Sounds the buzzer at the frequency relative to the note F in Hz
        tone(buzzer,349);    
        delay(200);    
        noTone(buzzer); 
        // Sounds the buzzer at the frequency relative to the note G in Hz
        tone(buzzer,392);            
        delay(200);
        noTone(buzzer); 
        */
  }
